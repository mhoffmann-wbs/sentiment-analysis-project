name: CI

on:
  push:
    branches: [ main ]
    paths:
      - "src/**"
      - "data/**"
      - "requirements.txt"
      - ".github/workflows/**"
      - "Dockerfile"
      - "data/**"
  pull_request:
    paths:
      - "src/**"
      - "data/**"
      - "requirements.txt"
      - ".github/workflows/**"
      - "Dockerfile"
      - "data/**"

jobs:

  mypy--type-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pandas-stubs mypy

      - name: Run mypy
        run: mypy src

  ruff--lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Ruff linter
        run: ruff check .

      - name: Run Ruff formatter check
        run: ruff format . --check

  pytest--tests:
    runs-on: ubuntu-latest
    needs: [mypy--type-check, ruff--lint-and-format]
    timeout-minutes: 10
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with pytest
        run: pytest -v

  run-predict:
    runs-on: ubuntu-latest
    needs: [mypy--type-check, ruff--lint-and-format]
    timeout-minutes: 10
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run the predict script
        run: python src/predict.py "good"

  docker--build-and-push:
    runs-on: ubuntu-latest
    needs: [run-predict]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sentiment-analysis-app:latest

  slack--notify:
    runs-on: ubuntu-latest
    needs: [mypy--type-check, ruff--lint-and-format, pytest--tests, run-predict, docker--build-and-push]   # wait until pipeline finishes
    if: always()              # run even if previous jobs fail
    steps:
      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "*CI Pipeline Summary for `${{ github.repository }}`* on branch *${{ github.ref_name }}*\n• Type-check: *${{ needs.mypy--type-check.result }}*\n• Lint & Format: *${{ needs.ruff--lint-and-format.result }}*\n• Tests: *${{ needs.pytest--tests.result }}*\n• Run Predict: *${{ needs.run-predict.result }}*\n• Build & Push: *${{ needs.docker--build-and-push.result }}*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View details>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}